<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="callInfo">


	<resultMap type="CallInfo" id="CallInfoResultMap">
		<id column="callNum" property="callNum" />
		<result column="csId" property="csId" />
		<result column="qpId" property="qpId" />
		<result column="senderName" property="senderName" />
		<result column="senderAddress" property="senderAddress" />
		<result column="senderAddressDetail" property="senderAddressDetail" />
		<result column="senderPhone" property="senderPhone" />
		<result column="vehicleType" property="vehicleType" />
		<result column="totalPrice" property="totalPrice" />
		<result column="payType" property="payType" />
		<result column="urgent" property="urgent" />
		<result column="series" property="series" />
		<result column="reserved" property="reserved" />
		<result column="reservationTime" property="reservationTime" />
		<result column="deliveryStatus" property="deliveryStatus" />
		<result column="payStatus" property="payStatus" />
		<result column="callTime" property="callTime" />
		<result column="latitude" property="latitude" />
		<result column="longitude" property="longitude" />
	</resultMap>


	<insert id="createCall" parameterType="CallInfo">
		insert into callInfo
		values(#{callNum},#{csId},null,#{senderName},#{senderAddress},#{senderAddressDetail}, #{senderPhone},
		#{vehicleType},#{totalPrice},#{payType},#{urgent},#{series},#{reserved},
		to_date(#{reservationTime},'mm/dd/yyyy hh24:mi'),0,#{payStatus},sysdate,#{latitude},#{longitude})
		
		<selectKey keyProperty="callNum" resultType="int" order="BEFORE">
			SELECT cnumseq.nextval FROM DUAL
		</selectKey>
	</insert>
	
	<insert id="createCallNow" parameterType="CallInfo">
		insert into callInfo
		values(#{callNum},#{csId},null,#{senderName},#{senderAddress},#{senderAddressDetail}, #{senderPhone},
		#{vehicleType},#{totalPrice},#{payType},#{urgent},#{series},#{reserved},
		sysdate,0,#{payStatus},sysdate,#{latitude},#{longitude})
		
		<selectKey keyProperty="callNum" resultType="int" order="BEFORE">
			SELECT cnumseq.nextval FROM DUAL
		</selectKey>
	</insert>

	<select id="selectCallByCnum" parameterType="int" resultType="CallInfo">
		select callNum, csId, qpId, senderName, senderAddress, senderAddressDetail,
				senderPhone, vehicleType, totalPrice, payType, urgent, series, 
				reserved, to_char(reservationTime, 'mm/dd/yyyy hh24:mi') as reservationTime, deliveryStatus, payStatus, to_char(callTime, 'mm/dd/yyyy hh24:mi'),
				latitude, longitude
		from callInfo
		where callNum=#{callNum}
	</select><!--callNum으로 -->
	
	<select id="selectCallByCSId" parameterType="String" resultType="CallInfo">
		select callNum, csId, qpId, senderName, senderAddress, senderAddressDetail,
				senderPhone, vehicleType, totalPrice, payType, urgent, series, 
				reserved, to_char(reservationTime, 'mm/dd/yyyy hh24:mi') as reservationTime, deliveryStatus, payStatus, to_char(callTime, 'mm/dd/yyyy hh24:mi') as callTime,
				latitude, longitude 
		from callInfo
		where csId=#{csId}
		and deliveryStatus = 0
		and sysdate-callTime &lt; 1
		and rownum=1
	</select><!--csId 와  delivery status = 0으로 -->
	
	<select id="selectCallListByCSId" parameterType="String" resultType="CallInfo">
		select * from callInfo
		where csId=#{csId}
	</select><!--csId 와  delivery status = 0으로 -->

	<select id="selectCallListByCondition" parameterType="map" resultType="CallInfo">
		select * from callInfo
		<where>
			<if test="csId != null">
				csId = #{csId}
			</if>
			<if test="qpId != null">
				AND qpId = #{qpId}
			</if>
			<if test="deliveryStatus != null">
				AND deliveryStatus = #{deliveryStatus}			
			</if>
		</where>
	</select><!--condition으로 -->
	
	<!-- 배송기사 이름불러오기 -->
	<select id = "getQPInfo" parameterType = "int" resultType="QPInfo">
		select 	q.qpId as qpId,
				q.qpPassword as qpPassword,
				q.qpName as qpName,
				q.qpPhone as qpPhone,
				q.qpLicense as qpLicense,
				q.qpVehicleType as qpVehicleType,
				q.qpDeposit as qpDeposit,
				q.qpProfile as qpProfile
		from 	callInfo c, orderInfo o, qpInfo q
		where 	c.callnum = #{callNum}
		and 	c.callnum = o.callnum
		and 	c.qpid = q.qpid
	</select>
	
	
	<select id="selectCallListByIdAndDate" parameterType="map" resultType="CallInfo">
		select * from callInfo
		<where>
			<if test="csId != null">
				csId = #{csId}
			</if>
			<if test="callTime != null">
				AND callTime >= to_date(#{callTime}, 'mm/dd/yyyy hh24:mi')
			</if>
		</where>
		order by callTime
	</select><!--condition으로 -->
	
	<select id="selectCallListByNameAndDate" parameterType="map" resultType="CallInfo">
		select * from callInfo
		<where>
			<if test="senderName != null">
				senderName like '%'||#{senderName}||'%'
			</if>
			<if test="callTime != null">
				AND callTime >= to_date(#{callTime}, 'mm/dd/yyyy hh24:mi')
			</if>
		</where>
		order by callTime
	</select><!--condition으로 -->
	
	<select id="selectCallList" resultType="CallInfo">
		select * from callInfo
	</select><!-- 전체로 -->
	
	<update id="updateCall" parameterType="CallInfo"> <!-- 이렇게만 바꾸면 될까? -->
		update callInfo
		set
		<if test="qpId != 0">
				qpId=#{qpId},
		</if>  
		senderName=#{senderName},
		senderAddress=#{senderAddress},
		senderAddressDetail=#{senderAddressDetail},
		senderPhone=#{senderPhone},
		vehicleType=#{vehicleType},
		totalPrice=#{totalPrice},
		deliveryStatus=#{deliveryStatus},
		payType=#{payType},
		urgent=#{urgent},
		series=#{series},
		reserved=#{reserved},
		payStatus=#{payStatus},
		callTime=sysdate,
		latitude=#{latitude},
		longitude=#{longitude}
		where callNum=#{callNum}
	</update>


	<delete id="deleteCall" parameterType="int">
		delete callInfo where callNum=#{callNum}
	</delete>
	
	<delete id="deletePastCalls">
		delete from callInfo
		where sysdate-callTime > 1
	</delete>

	<update parameterType="map" id="updateCallAfterConfirm">
		update callInfo
		set deliveryStatus=3
		<if test="list != null and list.size() >= 1">
			where callNum in
			<foreach separator="," close=")" open="(" item="callNum"
				collection="list"> #{callNum} </foreach>
		</if>
	</update>

	<update parameterType="int" id="updateAfterOrdersChecked">
		update callInfo
		set deliveryStatus=4
		where callNum = #{callNum}
	</update>
	
	<!-- 0612 이은진 추가 -->
	<select id="selectUnpayedCall" parameterType="int"
		resultType="CallInfo">
		select *
		from callInfo
		where qpId=#{qpId}
		and deliveryStatus=4
		and payStatus=2
		and payType not in (2,3,4,5)
	</select>


	<select id="selectUnpayedSum" parameterType="map"
		resultType="int">
		select trunc(sum(totalPrice)*0.95)
		from callInfo
		<if test="list != null and list.size() >= 1">
			where callNum in
			<foreach separator="," close=")" open="(" item="callNum"
				collection="list"> #{callNum} </foreach>
		</if>
	</select>


	<update id="updatePayStatus" parameterType="map">
		update callInfo
		set payStatus=3
		<if test="list != null and list.size() >= 1">
			where callNum in
			<foreach separator="," close=")" open="(" item="callNum"
				collection="list"> #{callNum} </foreach>
		</if>
	</update>
	
</mapper>