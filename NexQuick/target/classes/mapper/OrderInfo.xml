<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="orderInfo">

	<resultMap type="OrderInfo" id="OrderInfoResultMap">
		<id column="orderNum" property="orderNum" />
		<result column="callNum" property="callNum" />
		<result column="receiverName" property="receiverName" />
		<result column="receiverAddress" property="receiverAddress" />
		<result column="receiverPhone" property="receiverPhone" />
		<result column="orderPrice" property="orderPrice" />
		<result column="arrivalTime" property="arrivalTime" />
	</resultMap>


	<insert id="createOrder" parameterType="OrderInfo">
		insert into orderInfo values(
			#{orderNum},#{callNum},#{receiverName},#{receiverAddress},#{receiverPhone},
			#{orderPrice},#{isGet},null, #{memo})
		
		<selectKey keyProperty="orderNum" resultType="int" order="BEFORE">
			SELECT onumseq.nextval FROM DUAL
		</selectKey>
	</insert>

	<select id="selectOrder" parameterType="int" resultType="OrderInfo">
		select * from orderInfo
		where orderNum=#{orderNum}
	</select><!-- orderNum으로 하나 찾기 -->
	
	<select id="selectOrderListByCnum" parameterType="int" resultType="OrderInfo">
		select * from orderInfo
		where callNum=#{callNum}
	</select><!-- callNum으로 찾기 -->
	
	<select id="selectOrderList" resultType="OrderInfo">
		select * from orderInfo
	</select><!-- 전체 -->
	
	<update id="updateOrder" parameterType="OrderInfo">
		update orderInfo
		set receiverName=#{receiverName},
		receiverAddress=#{receiverAddress},
		receiverPhone=#{receiverPhone},
		orderPrice=#{orderPrice},
		isget=#{isGet}
		where orderNum=#{orderNum}
	</update>
	<!-- arrivalTime만 바뀌는 거 / 사용자가 call 수정하면서 정보 바꾸는 거 둘 다 하나 메소드로 동시 처리? -->

	<delete id="deleteOrder" parameterType="int">
		delete orderInfo
		where orderNum=#{orderNum}
	</delete>
	
	<delete id="deletePastOrders">
		delete from orderInfo
		where callNum in (select callNum
                          from callInfo
                          where sysdate-callTime > 1)
	</delete>
	
	<select id="onDeliveryCallList" parameterType="String" resultType="OnDelivery">
		select c.callNum, orderNum, callTime, senderAddress, receiverName, receiverAddress, orderPrice, urgent, deliveryStatus 
		from orderInfo o, callInfo c
		where c.callNum = o.callNum
		and csId = #{csId}
		and deliveryStatus between 1 and 3
		and isGet = 0
		order by callTime
	</select>
	
	<select id="allCallList" parameterType="String" resultType="OnDelivery">
		select c.callNum, orderNum, callTime, senderAddress, receiverName, receiverAddress, orderPrice, deliveryStatus 
		from orderInfo o, callInfo c
		where c.callNum = o.callNum
		and csId = #{csId}
		order by callTime
	</select>
	
	<select id="allCallListByIdAndName" parameterType="String" resultType="OnDelivery">
		select c.callNum, orderNum, callTime, senderAddress, receiverName, receiverAddress, orderPrice, deliveryStatus 
		from orderInfo o, callInfo c
		where c.callNum = o.callNum
		<where>
			<if test="csId != null">
				AND csId = #{csId}
			</if>
			<if test="callTime != null">
				AND callTime >= #{callTime}
			</if>
		</where>
		order by callTime
	</select>

	<select id="selectOrderListToConfrim" parameterType="map"
		resultType="OrderInfo">
		select * from orderInfo
		where
		receiverPhone = #{receiverPhone}
		and
		callNum in (
		select callNum from callInfo
		where qpId=#{qpId}
		and deliveryStauts=3
		)

	</select>
	

	<update id="updateOrderAfterConfirm" parameterType="map">
	update orderinfo
	set isGet=1, arrivalTime=sysdate
	where orderNum in
	<if test="list != null and list.size() >= 1">
	where callNum in 
	<foreach separator="," close=")" open="(" item="orderNum" collection="list"> #{orderNum} </foreach>
	</if>
	</update>

	
	<select id="sumIsGet" parameterType="int" resultType="int">
		select sum(isGet)
		from orderInfo
		where callNum=#{callNum}
	</select>
	
	
	<select id="countLinkedOrder" parameterType="int" resultType="int">
		select count(*)
		from orderInfo
		where callNum=#{callNum}
	</select>
</mapper>

